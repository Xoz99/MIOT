generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Merchant {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  storeName   String
  ownerName   String
  phone       String?
  address     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  products     Product[]
  transactions Transaction[]
  rfidCards    RfidCard[]
  
  @@map("merchants")
}

model Product {
  id         Int      @id @default(autoincrement())
  name       String
  price      Int
  stock      Int
  category   String
  merchantId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  merchant         Merchant          @relation(fields: [merchantId], references: [id], onDelete: Cascade)
  transactionItems TransactionItem[]
  
  @@map("products")
}

model RfidCard {
  id         Int      @id @default(autoincrement())
  cardId     String   @unique
  pin        String
  balance    Int      @default(0)
  isActive   Boolean  @default(true)
  merchantId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  merchant     Merchant      @relation(fields: [merchantId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  
  @@map("rfid_cards")
}

model Transaction {
  id            Int      @id @default(autoincrement())
  amount        Int
  status        String   @default("completed")
  cardId        String
  merchantId    Int
  blockchainTx  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  merchant Merchant          @relation(fields: [merchantId], references: [id], onDelete: Cascade)
  rfidCard RfidCard          @relation(fields: [cardId], references: [cardId])
  items    TransactionItem[]
  
  @@map("transactions")
}

model TransactionItem {
  id            Int @id @default(autoincrement())
  transactionId Int
  productId     Int
  quantity      Int
  price         Int
  
  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  product     Product     @relation(fields: [productId], references: [id])
  
  @@map("transaction_items")
}
